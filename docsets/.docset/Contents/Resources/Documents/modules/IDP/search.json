{"Typealiases.html#/Random":{"name":"Random","abstract":"<p>Random generator function type</p>"},"Typealiases.html#/TimeProvider":{"name":"TimeProvider","abstract":"<p>Function that returns the current date/now</p>"},"Typealiases.html#/VerifierCode":{"name":"VerifierCode","abstract":"<p>VerifierCode</p>"},"Typealiases.html#/IDPScope":{"name":"IDPScope","abstract":"<p>IDP Scope</p>"},"Structs/PrivateKeyContainer/Error.html#/keyNotFound(_:)":{"name":"keyNotFound(_:)","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html#/unknownError(_:)":{"name":"unknownError(_:)","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html#/retrievingPublicKeyFailed":{"name":"retrievingPublicKeyFailed","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html#/creationFromBiometrie(_:)":{"name":"creationFromBiometrie(_:)","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html#/creationWithoutBiometrie(_:)":{"name":"creationWithoutBiometrie(_:)","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html#/convertingKey(_:)":{"name":"convertingKey(_:)","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html#/signing(_:)":{"name":"signing(_:)","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html#/canceledByUser":{"name":"canceledByUser","parent_name":"Error"},"Structs/PrivateKeyContainer/Error.html":{"name":"Error","parent_name":"PrivateKeyContainer"},"Structs/PrivateKeyContainer.html#/init(with:)":{"name":"init(with:)","abstract":"<p>Initializes a <code>PrivateKeyContainer</code> for a given tag. Throws <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/PrivateKeyContainer/Error.html\">PrivateKeyContainer.Error</a></code> in case of a failure.</p>","parent_name":"PrivateKeyContainer"},"Structs/PrivateKeyContainer.html#/deleteExistingKey(for:)":{"name":"deleteExistingKey(for:)","abstract":"<p>Deletes an existing secure enclave key.</p>","parent_name":"PrivateKeyContainer"},"Structs/PrivateKeyContainer.html#/createFromSecureEnclave(with:)":{"name":"createFromSecureEnclave(with:)","abstract":"<p>Creates a <code>PrivateKeyContainer</code> with a given tag. Throws <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/PrivateKeyContainer/Error.html\">PrivateKeyContainer.Error</a></code> in case of a failure.</p>","parent_name":"PrivateKeyContainer"},"Structs/PrivateKeyContainer.html#/createFromKeyChain(with:)":{"name":"createFromKeyChain(with:)","abstract":"<p>key creation without secure enclave for integration tests. Only available for simulator builds to enable","parent_name":"PrivateKeyContainer"},"Structs/PrivateKeyContainer.html#/sign(data:)":{"name":"sign(data:)","abstract":"<p>Sign the given <code>Data</code> with the private key.</p>","parent_name":"PrivateKeyContainer"},"Structs/SignedPairingData.html#/originalPairingData":{"name":"originalPairingData","abstract":"<p>original</p>","parent_name":"SignedPairingData"},"Structs/SignedPairingData.html#/init(originalPairingData:signedPairingData:)":{"name":"init(originalPairingData:signedPairingData:)","abstract":"<p>Initialize a SignedChallenge</p>","parent_name":"SignedPairingData"},"Structs/SignedPairingData.html#/serialize()":{"name":"serialize()","abstract":"<p>Serialize the signedChallenge</p>","parent_name":"SignedPairingData"},"Structs/SignedPairingData.html#/init(from:)":{"name":"init(from:)","abstract":"<p>Initializes with a given JWT String representing the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/PairingData.html\">PairingData</a></code>.</p>","parent_name":"SignedPairingData"},"Structs/SignedChallenge.html#/originalChallenge":{"name":"originalChallenge","abstract":"<p>Original challenge</p>","parent_name":"SignedChallenge"},"Structs/SignedChallenge.html#/signedChallenge":{"name":"signedChallenge","abstract":"<p>Signed challenge</p>","parent_name":"SignedChallenge"},"Structs/SignedChallenge.html#/init(originalChallenge:signedChallenge:)":{"name":"init(originalChallenge:signedChallenge:)","abstract":"<p>Initialize a SignedChallenge</p>","parent_name":"SignedChallenge"},"Structs/SignedChallenge.html#/serialize()":{"name":"serialize()","abstract":"<p>Serialize the signedChallenge</p>","parent_name":"SignedChallenge"},"Structs/SignedAuthenticationData.html#/originalChallenge":{"name":"originalChallenge","abstract":"<p>Original idp challenge session that is signed within the authentication data</p>","parent_name":"SignedAuthenticationData"},"Structs/SignedAuthenticationData.html#/signedAuthenticationData":{"name":"signedAuthenticationData","abstract":"<p>Signed authentication data that is encrypted and sent to the server</p>","parent_name":"SignedAuthenticationData"},"Structs/SignedAuthenticationData.html#/serialize()":{"name":"serialize()","abstract":"<p>Serialize the signedChallenge</p>","parent_name":"SignedAuthenticationData"},"Structs/RegistrationData/DeviceInformation/DeviceType.html#/init(product:model:os:osVersion:manufacturer:)":{"name":"init(product:model:os:osVersion:manufacturer:)","parent_name":"DeviceType"},"Structs/RegistrationData/DeviceInformation/DeviceType.html#/product":{"name":"product","parent_name":"DeviceType"},"Structs/RegistrationData/DeviceInformation/DeviceType.html#/model":{"name":"model","parent_name":"DeviceType"},"Structs/RegistrationData/DeviceInformation/DeviceType.html#/os":{"name":"os","parent_name":"DeviceType"},"Structs/RegistrationData/DeviceInformation/DeviceType.html#/osVersion":{"name":"osVersion","parent_name":"DeviceType"},"Structs/RegistrationData/DeviceInformation/DeviceType.html#/manufacturer":{"name":"manufacturer","parent_name":"DeviceType"},"Structs/RegistrationData/DeviceInformation.html#/init(name:deviceType:)":{"name":"init(name:deviceType:)","parent_name":"DeviceInformation"},"Structs/RegistrationData/DeviceInformation.html#/name":{"name":"name","parent_name":"DeviceInformation"},"Structs/RegistrationData/DeviceInformation.html#/deviceType":{"name":"deviceType","parent_name":"DeviceInformation"},"Structs/RegistrationData/DeviceInformation/DeviceType.html":{"name":"DeviceType","abstract":"<p>[REQ:gemF_Biometrie:A_21415:Device_Type]","parent_name":"DeviceInformation"},"Structs/RegistrationData.html#/init(authCert:signedParingData:deviceInformation:)":{"name":"init(authCert:signedParingData:deviceInformation:)","parent_name":"RegistrationData"},"Structs/RegistrationData.html#/authCert":{"name":"authCert","parent_name":"RegistrationData"},"Structs/RegistrationData.html#/signedParingData":{"name":"signedParingData","parent_name":"RegistrationData"},"Structs/RegistrationData.html#/deviceInformation":{"name":"deviceInformation","parent_name":"RegistrationData"},"Structs/RegistrationData/DeviceInformation.html":{"name":"DeviceInformation","abstract":"<p>[REQ:gemF_Biometrie:A_21415:Device_Information]</p>","parent_name":"RegistrationData"},"Structs/PairingEntries.html#/pairingEntries":{"name":"pairingEntries","parent_name":"PairingEntries"},"Structs/PairingEntries.html#/init(pairingEntries:)":{"name":"init(pairingEntries:)","parent_name":"PairingEntries"},"Structs/PairingEntry.html#/init(name:signedPairingData:creationTime:)":{"name":"init(name:signedPairingData:creationTime:)","parent_name":"PairingEntry"},"Structs/PairingEntry.html#/name":{"name":"name","parent_name":"PairingEntry"},"Structs/PairingEntry.html#/signedPairingData":{"name":"signedPairingData","parent_name":"PairingEntry"},"Structs/PairingEntry.html#/creationTime":{"name":"creationTime","parent_name":"PairingEntry"},"Structs/PairingEntry.html#/pairingEntryVersion":{"name":"pairingEntryVersion","parent_name":"PairingEntry"},"Structs/PairingData.html#/init(authCertSubjectPublicKeyInfo:notAfter:product:serialnumber:keyIdentifier:seSubjectPublicKeyInfo:issuer:)":{"name":"init(authCertSubjectPublicKeyInfo:notAfter:product:serialnumber:keyIdentifier:seSubjectPublicKeyInfo:issuer:)","parent_name":"PairingData"},"Structs/PairingData.html#/keyIdentifier":{"name":"keyIdentifier","parent_name":"PairingData"},"Structs/NestedJWT.html#/init(njwt:)":{"name":"init(njwt:)","abstract":"<p>Initialize payload</p>","parent_name":"NestedJWT"},"Structs/KKAppDirectory/Entry.html#/init(name:identifier:)":{"name":"init(name:identifier:)","parent_name":"Entry"},"Structs/KKAppDirectory/Entry.html#/name":{"name":"name","parent_name":"Entry"},"Structs/KKAppDirectory/Entry.html#/identifier":{"name":"identifier","parent_name":"Entry"},"Structs/KKAppDirectory.html#/init(apps:)":{"name":"init(apps:)","parent_name":"KKAppDirectory"},"Structs/KKAppDirectory.html#/apps":{"name":"apps","parent_name":"KKAppDirectory"},"Structs/KKAppDirectory/Entry.html":{"name":"Entry","parent_name":"KKAppDirectory"},"Structs/KKAppDirectory.html#/sorted()":{"name":"sorted()","parent_name":"KKAppDirectory"},"Structs/IDPToken.html#/accessToken":{"name":"accessToken","abstract":"<p>Access token</p>","parent_name":"IDPToken"},"Structs/IDPToken.html#/expires":{"name":"expires","abstract":"<p>Expiry date</p>","parent_name":"IDPToken"},"Structs/IDPToken.html#/idToken":{"name":"idToken","abstract":"<p>ID token</p>","parent_name":"IDPToken"},"Structs/IDPToken.html#/ssoToken":{"name":"ssoToken","abstract":"<p>SSO token</p>","parent_name":"IDPToken"},"Structs/IDPToken.html#/tokenType":{"name":"tokenType","abstract":"<p>Token type</p>","parent_name":"IDPToken"},"Structs/IDPToken.html#/redirect":{"name":"redirect","abstract":"<p>Redirect the token is valid for. Must be the same for initial authentication and SSO.</p>","parent_name":"IDPToken"},"Structs/IDPToken.html#/init(accessToken:expires:idToken:ssoToken:tokenType:redirect:)":{"name":"init(accessToken:expires:idToken:ssoToken:tokenType:redirect:)","abstract":"<p>Initialize an IDPToken</p>","parent_name":"IDPToken"},"Structs/IDPToken.html#/idTokenPayload()":{"name":"idTokenPayload()","parent_name":"IDPToken"},"Structs/IDPToken.html#/init(from:)":{"name":"init(from:)","parent_name":"IDPToken"},"Structs/IDPExtAuthVerify.html#/code":{"name":"code","abstract":"<p>Authorization code of the sektoral identity provider</p>","parent_name":"IDPExtAuthVerify"},"Structs/IDPExtAuthVerify.html#/state":{"name":"state","abstract":"<p>State of IDP to dereference the code</p>","parent_name":"IDPExtAuthVerify"},"Structs/IDPExtAuthVerify.html#/kkAppRedirectURI":{"name":"kkAppRedirectURI","abstract":"<p>Redirect URI for the sektoral idp</p>","parent_name":"IDPExtAuthVerify"},"Structs/IDPExtAuth.html#/kkAppId":{"name":"kkAppId","abstract":"<p>The user selected identifier of the application to use for the authentication.</p>","parent_name":"IDPExtAuth"},"Structs/IDPExtAuth.html#/state":{"name":"state","abstract":"<p>OAuth parameter state of high entropy.</p>","parent_name":"IDPExtAuth"},"Structs/IDPExtAuth.html#/codeChallenge":{"name":"codeChallenge","abstract":"<p>SHA256 hashed verifier code</p>","parent_name":"IDPExtAuth"},"Structs/IDPExtAuth.html#/codeChallengeMethod":{"name":"codeChallengeMethod","abstract":"<p>codeChallenge hashing method. Must be S256 to indicate SHA256 hashed value.</p>","parent_name":"IDPExtAuth"},"Structs/IDPExtAuth.html#/nonce":{"name":"nonce","abstract":"<p>OpenID parameter nonce of high entropy.</p>","parent_name":"IDPExtAuth"},"Structs/IDPExchangeToken.html#/code":{"name":"code","abstract":"<p>Exchange code</p>","parent_name":"IDPExchangeToken"},"Structs/IDPExchangeToken.html#/sso":{"name":"sso","abstract":"<p>SSO token</p>","parent_name":"IDPExchangeToken"},"Structs/IDPExchangeToken.html#/state":{"name":"state","abstract":"<p>IDPChallengeSession state</p>","parent_name":"IDPExchangeToken"},"Structs/IDPExchangeToken.html#/redirect":{"name":"redirect","abstract":"<p>redirect to use for the token exchange.</p>","parent_name":"IDPExchangeToken"},"Structs/IDPExchangeToken.html#/init(code:sso:state:redirect:)":{"name":"init(code:sso:state:redirect:)","abstract":"<p>Initialize</p>","parent_name":"IDPExchangeToken"},"Structs/IDPDirectoryKKApps.html#/init(jwt:)":{"name":"init(jwt:)","parent_name":"IDPDirectoryKKApps"},"Structs/IDPChallengeSession.html#/challenge":{"name":"challenge","abstract":"<p>The verified challenge</p>","parent_name":"IDPChallengeSession"},"Structs/IDPChallengeSession.html#/verifierCode":{"name":"verifierCode","abstract":"<p>The verifier code used to request the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/IDPChallengeSession.html#/challenge\">challenge</a></code></p>","parent_name":"IDPChallengeSession"},"Structs/IDPChallengeSession.html#/state":{"name":"state","abstract":"<p>The state used for request the challenge</p>","parent_name":"IDPChallengeSession"},"Structs/IDPChallengeSession.html#/nonce":{"name":"nonce","abstract":"<p>A random string used for requesting the challenge</p>","parent_name":"IDPChallengeSession"},"Structs/IDPChallengeSession.html#/init(challenge:verifierCode:state:nonce:)":{"name":"init(challenge:verifierCode:state:nonce:)","abstract":"<p>Initialize an IDP Challenge session</p>","parent_name":"IDPChallengeSession"},"Structs/IDPChallengeSession.html#/sign(with:using:alg:jsonEncoder:)":{"name":"sign(with:using:alg:jsonEncoder:)","abstract":"<p>Create the signed IDPChallenge response JWT</p>","parent_name":"IDPChallengeSession"},"Structs/IDPChallengeSession.html#/validateNonce(with:)":{"name":"validateNonce(with:)","parent_name":"IDPChallengeSession"},"Structs/ExtAuthChallengeSession.html#/verifierCode":{"name":"verifierCode","parent_name":"ExtAuthChallengeSession"},"Structs/ExtAuthChallengeSession.html#/nonce":{"name":"nonce","parent_name":"ExtAuthChallengeSession"},"Structs/ExtAuthChallengeSession.html#/entry":{"name":"entry","parent_name":"ExtAuthChallengeSession"},"Structs/ExtAuthChallengeSession.html#/init(verifierCode:nonce:for:)":{"name":"init(verifierCode:nonce:for:)","parent_name":"ExtAuthChallengeSession"},"Structs/ExtAuthChallengeSession.html#/validateNonce(with:)":{"name":"validateNonce(with:)","parent_name":"ExtAuthChallengeSession"},"Structs/IDPChallengeResponse.html#/init(njwt:)":{"name":"init(njwt:)","abstract":"<p>Initialize response</p>","parent_name":"IDPChallengeResponse"},"Structs/IDPChallenge/UserConsent.html#/init(from:)":{"name":"init(from:)","abstract":"<p>Initializer for decoding UserContent</p>","parent_name":"UserConsent"},"Structs/IDPChallenge/Claim.html#/exp":{"name":"exp","parent_name":"Claim"},"Structs/IDPChallenge/Claim.html#/iat":{"name":"iat","parent_name":"Claim"},"Structs/IDPChallenge/Claim.html#/nbf":{"name":"nbf","parent_name":"Claim"},"Structs/IDPChallenge/Claim.html#/init(exp:iat:nbf:)":{"name":"init(exp:iat:nbf:)","parent_name":"Claim"},"Structs/IDPChallenge/Claim.html":{"name":"Claim","parent_name":"IDPChallenge"},"Structs/IDPChallenge.html#/challenge":{"name":"challenge","parent_name":"IDPChallenge"},"Structs/IDPChallenge.html#/userConsent":{"name":"userConsent","parent_name":"IDPChallenge"},"Structs/IDPChallenge.html#/init(challenge:consent:)":{"name":"init(challenge:consent:)","parent_name":"IDPChallenge"},"Structs/IDPChallenge.html#/init(from:)":{"name":"init(from:)","parent_name":"IDPChallenge"},"Structs/IDPChallenge/UserConsent.html":{"name":"UserConsent","parent_name":"IDPChallenge"},"Structs/IDPChallenge.html#/exp":{"name":"exp","parent_name":"IDPChallenge"},"Structs/IDPChallenge.html#/iat":{"name":"iat","parent_name":"IDPChallenge"},"Structs/IDPChallenge.html#/nbf":{"name":"nbf","parent_name":"IDPChallenge"},"Structs/DiscoveryDocument.html#/discKey":{"name":"discKey","abstract":"<p>The IDP X.509 certificate used to validate the discovery document</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/signingCert":{"name":"signingCert","abstract":"<p>The IDP X.509 certificate that is used to check signatures</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/init(from:)":{"name":"init(from:)","abstract":"<p>Initialize as Decodable</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/encode(to:)":{"name":"encode(to:)","abstract":"<p>Encode the DiscoveryDocument according to the Encodable protocol</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/authentication":{"name":"authentication","abstract":"<p>IDP Authentication endpoint</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/sso":{"name":"sso","abstract":"<p>IDP Authentication endpoint</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/token":{"name":"token","abstract":"<p>IDP Token exchange endpoint</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/pairing":{"name":"pairing","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/authenticationPaired":{"name":"authenticationPaired","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/directoryKKApps":{"name":"directoryKKApps","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/thirdPartyAuth":{"name":"thirdPartyAuth","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/expiresOn":{"name":"expiresOn","abstract":"<p>Expiration date</p>","parent_name":"DiscoveryDocument"},"Structs/DiscoveryDocument.html#/issuedAt":{"name":"issuedAt","abstract":"<p>Issued date</p>","parent_name":"DiscoveryDocument"},"Structs/BiometricAuthenticationSession.html#/init(authenticationData:originalChallenge:)":{"name":"init(authenticationData:originalChallenge:)","abstract":"<p>Initializer</p>","parent_name":"BiometricAuthenticationSession"},"Structs/BiometricAuthenticationSession.html#/sign(with:alg:jsonEncoder:)":{"name":"sign(with:alg:jsonEncoder:)","abstract":"<p>Create the signed IDPChallenge response JWT</p>","parent_name":"BiometricAuthenticationSession"},"Structs/AuthenticationData.html#/init(authCert:challengeToken:deviceInformation:amr:keyIdentifier:exp:)":{"name":"init(authCert:challengeToken:deviceInformation:amr:keyIdentifier:exp:)","parent_name":"AuthenticationData"},"Structs/AuthenticationData.html":{"name":"AuthenticationData","abstract":"<p>Represents user/device data that is used for authentication for the idp while using alternative authentication/"},"Structs/BiometricAuthenticationSession.html":{"name":"BiometricAuthenticationSession","abstract":"<p>This struct combines AuthenticationData, the IDPChallengeSession and a signer to create a signature for using while"},"Structs/DiscoveryDocument.html":{"name":"DiscoveryDocument","abstract":"<p>IDP Discovery document</p>"},"Structs/IDPChallenge.html":{"name":"IDPChallenge","abstract":"<p>IDPChallenge</p>"},"Structs/IDPChallengeResponse.html":{"name":"IDPChallengeResponse","abstract":"<p>The IDPChallengeResponse payload</p>"},"Structs/ExtAuthChallengeSession.html":{"name":"ExtAuthChallengeSession"},"Structs/IDPChallengeSession.html":{"name":"IDPChallengeSession","abstract":"<p>All relevant constraints needed for a successful challenge exchange</p>"},"Structs/IDPDirectoryKKApps.html":{"name":"IDPDirectoryKKApps","abstract":"<p>All relevant constraints needed for a successful challenge exchange</p>"},"Structs/IDPExchangeToken.html":{"name":"IDPExchangeToken","abstract":"<p>IDP Exchange Token that will be received upon successful verification of a SignedChallenge</p>"},"Structs/IDPExtAuth.html":{"name":"IDPExtAuth","abstract":"<p>Stores login information needed for external authentication (a.k.a. FastTrack).</p>"},"Structs/IDPExtAuthVerify.html":{"name":"IDPExtAuthVerify","abstract":"<p>Transport structure storing external authentication information transported by an universal link.</p>"},"Structs/IDPToken.html":{"name":"IDPToken","abstract":"<p>IDPToken</p>"},"Structs/KKAppDirectory.html":{"name":"KKAppDirectory"},"Structs/NestedJWT.html":{"name":"NestedJWT","abstract":"<p>Payload used for the JWE encryption</p>"},"Structs/PairingData.html":{"name":"PairingData","abstract":"<p>Structure for registering a biometric key. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignedPairingData.html\">SignedPairingData</a></code> for sigend representation."},"Structs/PairingEntry.html":{"name":"PairingEntry","abstract":"<p>Represents stored data within the idp."},"Structs/PairingEntries.html":{"name":"PairingEntries"},"Structs/RegistrationData.html":{"name":"RegistrationData","abstract":"<p>Bundles data needed for creating and verifiying a pairing."},"Structs/SignedAuthenticationData.html":{"name":"SignedAuthenticationData","abstract":"<p>Signed (with <code>PrK_SE_AUT</code>) representation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AuthenticationData.html\">AuthenticationData</a></code>.</p>"},"Structs/SignedChallenge.html":{"name":"SignedChallenge","abstract":"<p>Model that holds a challenge and its signed counterpart</p>"},"Structs/SignedPairingData.html":{"name":"SignedPairingData","abstract":"<p>Signed (with eGK) version of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/PairingData.html\">PairingData</a></code>."},"Structs/PrivateKeyContainer.html":{"name":"PrivateKeyContainer","abstract":"<p>Represents a (SecureEnclave) private key, namely <code>PrK_SE_AUT</code>, secured by iOS Biometrics.</p>"},"Protocols/SecureEnclaveSignatureProvider.html#/createPairingSession()":{"name":"createPairingSession()","abstract":"<p>Opens a pairing session and creates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses.html#/PairingSession\">PairingSession</a></code> object with it. The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses.html#/PairingSession\">PairingSession</a></code> object must be","parent_name":"SecureEnclaveSignatureProvider"},"Protocols/SecureEnclaveSignatureProvider.html#/signPairingSession(_:with:certificate:)":{"name":"signPairingSession(_:with:certificate:)","abstract":"<p>Creates a RegistrationData object using a <code>JWTSigner</code> to sign the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/PairingData.html\">PairingData</a></code>.</p>","parent_name":"SecureEnclaveSignatureProvider"},"Protocols/SecureEnclaveSignatureProvider.html#/abort(pairingSession:)":{"name":"abort(pairingSession:)","abstract":"<p>Cancels the signing session and delete all temporary data, such as <code>PrK_SE_AUT</code> and <code>PuK_SE_AUT</code>.</p>","parent_name":"SecureEnclaveSignatureProvider"},"Protocols/SecureEnclaveSignatureProvider.html#/authenticationData(for:)":{"name":"authenticationData(for:)","abstract":"<p>Provides <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignedAuthenticationData.html\">SignedAuthenticationData</a></code> by gathering all necessary data and signing them with <code>PrK_SE_AUT</code>. Will","parent_name":"SecureEnclaveSignatureProvider"},"Protocols/SecureEnclaveSignatureProvider.html#/isBiometrieRegistered":{"name":"isBiometrieRegistered","abstract":"<p>If the Publishers value is true, biometrics is successfully registered, false otherwise.</p>","parent_name":"SecureEnclaveSignatureProvider"},"Protocols/ExtAuthRequestStorage.html#/setExtAuthRequest(_:for:)":{"name":"setExtAuthRequest(_:for:)","parent_name":"ExtAuthRequestStorage"},"Protocols/ExtAuthRequestStorage.html#/getExtAuthRequest(for:)":{"name":"getExtAuthRequest(for:)","parent_name":"ExtAuthRequestStorage"},"Protocols/ExtAuthRequestStorage.html#/reset()":{"name":"reset()","abstract":"<p>Removes all pending requests</p>","parent_name":"ExtAuthRequestStorage"},"Protocols/ExtAuthRequestStorage.html#/pendingExtAuthRequests":{"name":"pendingExtAuthRequests","parent_name":"ExtAuthRequestStorage"},"Protocols/ChallengeSession.html#/verifierCode":{"name":"verifierCode","abstract":"<p>The verifier code used to request the <code>challenge</code></p>","parent_name":"ChallengeSession"},"Protocols/ChallengeSession.html#/validateNonce(with:)":{"name":"validateNonce(with:)","abstract":"<p>Validate the session with the given id token</p>","parent_name":"ChallengeSession"},"Protocols/IDPEndpoint.html#/url":{"name":"url","abstract":"<p>Endpoint URL</p>","parent_name":"IDPEndpoint"},"Protocols/IDPEndpoint.html#/cert":{"name":"cert","abstract":"<p>Certificate that can validate responses from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IDPEndpoint.html#/url\">url</a></code></p>","parent_name":"IDPEndpoint"},"Protocols/IDPStorage.html#/token":{"name":"token","abstract":"<p>Retrieve and set an IDP Token</p>","parent_name":"IDPStorage"},"Protocols/IDPStorage.html#/set(token:)":{"name":"set(token:)","abstract":"<p>Set and save the IDPToken</p>","parent_name":"IDPStorage"},"Protocols/IDPStorage.html#/discoveryDocument":{"name":"discoveryDocument","abstract":"<p>Retrieve a previously saved DiscoveryDocument</p>","parent_name":"IDPStorage"},"Protocols/IDPStorage.html#/set(discovery:)":{"name":"set(discovery:)","abstract":"<p>Set and save the DiscoveryDocument</p>","parent_name":"IDPStorage"},"Protocols/SecureEGKCertificateStorage.html#/certificate":{"name":"certificate","abstract":"<p>Retrieve the prior stored certificate</p>","parent_name":"SecureEGKCertificateStorage"},"Protocols/SecureEGKCertificateStorage.html#/set(certificate:)":{"name":"set(certificate:)","abstract":"<p>Set the stored certificate for this session or delete it, if <code>nil</code> is passed.</p>","parent_name":"SecureEGKCertificateStorage"},"Protocols/SecureEGKCertificateStorage.html#/keyIdentifier":{"name":"keyIdentifier","abstract":"<p>Retrieve the prior stored key identifier for biometric pairing use case</p>","parent_name":"SecureEGKCertificateStorage"},"Protocols/SecureEGKCertificateStorage.html#/set(keyIdentifier:)":{"name":"set(keyIdentifier:)","abstract":"<p>Set the stored certificate for this session or delete it, if <code>nil</code> is passed.</p>","parent_name":"SecureEGKCertificateStorage"},"Protocols/IDPSession.html#/isLoggedIn":{"name":"isLoggedIn","abstract":"<p>Whether the session has access to a (valid) authenticated session (e.g. token)</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/autoRefreshedToken":{"name":"autoRefreshedToken","abstract":"<p>Subscribe to the session&rsquo;s IDPToken and receive the latest (session) token through this Publisher</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/invalidateAccessToken()":{"name":"invalidateAccessToken()","abstract":"<p>Invalidates the active token. Use to logout the user or mark the existing Session as invalid, e.g. due to an","parent_name":"IDPSession"},"Protocols/IDPSession.html#/requestChallenge()":{"name":"requestChallenge()","abstract":"<p>Request a challenge from the IDPClient for certain scopes</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/verify(_:)":{"name":"verify(_:)","abstract":"<p>Verify the signed challenge</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/exchange(token:challengeSession:idTokenValidator:)":{"name":"exchange(token:challengeSession:idTokenValidator:)","abstract":"<p>Exchange the token with verifier for the actual token</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/refresh(token:)":{"name":"refresh(token:)","abstract":"<p>Refresh token</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/pairDevice(with:token:)":{"name":"pairDevice(with:token:)","abstract":"<p>Pairs the device with a biometric key.</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/unregisterDevice(_:token:)":{"name":"unregisterDevice(_:token:)","abstract":"<p>Unregisters the devices key with the given identifier.</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/listDevices(token:)":{"name":"listDevices(token:)","abstract":"<p>Returns the list of all registered devices.</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/altVerify(_:)":{"name":"altVerify(_:)","abstract":"<p>Verify a given challenge with the IDP using alternative authentication, a.k.a. biometric secured key.</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/loadDirectoryKKApps()":{"name":"loadDirectoryKKApps()","abstract":"<p>Load available Insurance companies that are capable of External Authentication (<em>FastTrack</em>).</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/startExtAuth(entry:)":{"name":"startExtAuth(entry:)","abstract":"<p>Initial step for external authentication with insurance company app.</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/extAuthVerifyAndExchange(_:idTokenValidator:)":{"name":"extAuthVerifyAndExchange(_:idTokenValidator:)","abstract":"<p>Follow up step whenever an insurance company app authorizes a user login.</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/verifyAndExchange(signedChallenge:idTokenValidator:)":{"name":"verifyAndExchange(signedChallenge:idTokenValidator:)","abstract":"<p>Verify signed challenge and immediately exchange the token</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/httpInterceptor(delegate:)":{"name":"httpInterceptor(delegate:)","abstract":"<p>Create a new IDPInterceptor for this session</p>","parent_name":"IDPSession"},"Protocols/IDPSession.html#/exchange(token:challengeSession:)":{"name":"exchange(token:challengeSession:)","abstract":"<p>Exchange the token with verifier for the actual token</p>","parent_name":"IDPSession"},"Protocols/IDPSchedulers.html#/networkIO":{"name":"networkIO","abstract":"<p>The scheduler to use for network comms</p>","parent_name":"IDPSchedulers"},"Protocols/IDPSchedulers.html#/serialIO":{"name":"serialIO","abstract":"<p>The scheduler to use for serial operations</p>","parent_name":"IDPSchedulers"},"Protocols/IDPSchedulers.html#/compute":{"name":"compute","abstract":"<p>The scheduler to use for computational/worker operations</p>","parent_name":"IDPSchedulers"},"Protocols/IDPSessionDelegate.html#/shouldAuthorize(request:)":{"name":"shouldAuthorize(request:)","abstract":"<p>Asks the delegate whether the given request should be authorized</p>","parent_name":"IDPSessionDelegate"},"Protocols/IDPClient.html#/loadDiscoveryDocument()":{"name":"loadDiscoveryDocument()","abstract":"<p>Load the DiscoveryDocument for the IDPClient</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/requestChallenge(codeChallenge:method:state:nonce:using:redirect:)":{"name":"requestChallenge(codeChallenge:method:state:nonce:using:redirect:)","abstract":"<p>Request a challenge from the IDP for a specific scope</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/verify(_:using:)":{"name":"verify(_:using:)","abstract":"<p>Verify a given challenge with the IDP</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/refresh(with:ssoToken:using:for:)":{"name":"refresh(with:ssoToken:using:for:)","abstract":"<p>Refreshes the authentication with a given SSO token. The SSO token must be retrieved by a prior<code>verify</code> and","parent_name":"IDPClient"},"Protocols/IDPClient.html#/exchange(token:verifier:redirectURI:encryptedKeyVerifier:using:)":{"name":"exchange(token:verifier:redirectURI:encryptedKeyVerifier:using:)","abstract":"<p>Exchange a token for an actual token</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/registerDevice(_:token:using:)":{"name":"registerDevice(_:token:using:)","abstract":"<p>Register a new biometric key for alternative authentication.</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/unregisterDevice(_:token:using:)":{"name":"unregisterDevice(_:token:using:)","abstract":"<p>Unregisters a key of the device with the given identifier.</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/listDevices(token:using:)":{"name":"listDevices(token:using:)","abstract":"<p>List all registered devices.</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/altVerify(_:using:)":{"name":"altVerify(_:using:)","abstract":"<p>Verify a given challenge with the IDP using alternative authentication, a.k.a. biometric secured key.</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/loadDirectoryKKApps(using:)":{"name":"loadDirectoryKKApps(using:)","abstract":"<p>Load available Insurance companies that are capable of External Authentication (<em>FastTrack</em>).</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/startExtAuth(_:using:)":{"name":"startExtAuth(_:using:)","abstract":"<p>Initial step for external authentication with insurance company app.</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html#/extAuthVerify(_:using:)":{"name":"extAuthVerify(_:using:)","abstract":"<p>Follow up step whenever an insurance company app authorizes a user login.</p>","parent_name":"IDPClient"},"Protocols/IDPClient.html":{"name":"IDPClient","abstract":"<p>Identity Provider protocol that should be implemented according to &lsquo;gemSpec_IDP_Dienst&rsquo;.</p>"},"Protocols/IDPSessionDelegate.html":{"name":"IDPSessionDelegate","abstract":"<p>Delegate for HTTPClient Interceptor(s)</p>"},"Protocols/IDPSchedulers.html":{"name":"IDPSchedulers","abstract":"<p>Schedulers that the IDP Session schedules its internal operations on</p>"},"Protocols/IDPSession.html":{"name":"IDPSession","abstract":"<p>IDPSession acts as an interactor/mediator for the IDPClient and IDPStorage"},"Protocols/SecureEGKCertificateStorage.html":{"name":"SecureEGKCertificateStorage","abstract":"<p>Interface to access an eGK Certificate that should be kept private"},"Protocols/IDPStorage.html":{"name":"IDPStorage","abstract":"<p>IDP Storage protocol</p>"},"Protocols/IDPEndpoint.html":{"name":"IDPEndpoint","abstract":"<p>IDP Endpoint</p>"},"Protocols/ChallengeSession.html":{"name":"ChallengeSession","abstract":"<p>Protocol for challenge sessions that need to be verified at some point in the process.</p>"},"Protocols/ExtAuthRequestStorage.html":{"name":"ExtAuthRequestStorage","abstract":"<p>sourcery: StreamWrapped</p>"},"Protocols/SecureEnclaveSignatureProvider.html":{"name":"SecureEnclaveSignatureProvider","abstract":"<p>Provides access for gathering biometrics related registration and authentication data.</p>"},"Extensions/BrainpoolP256r1/KeyExchange/PublicKey.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"PublicKey"},"Extensions/BrainpoolP256r1/KeyExchange/PublicKey.html":{"name":"PublicKey","parent_name":"KeyExchange"},"Extensions/BrainpoolP256r1/KeyExchange.html":{"name":"KeyExchange","parent_name":"BrainpoolP256r1"},"Extensions/BrainpoolP256r1.html":{"name":"BrainpoolP256r1"},"Enums/SecureEnclaveSignatureProviderError.html#/fetchingPrivateKey(_:)":{"name":"fetchingPrivateKey(_:)","parent_name":"SecureEnclaveSignatureProviderError"},"Enums/SecureEnclaveSignatureProviderError.html#/signing(_:)":{"name":"signing(_:)","parent_name":"SecureEnclaveSignatureProviderError"},"Enums/SecureEnclaveSignatureProviderError.html#/packagingAuthCertificate":{"name":"packagingAuthCertificate","parent_name":"SecureEnclaveSignatureProviderError"},"Enums/SecureEnclaveSignatureProviderError.html#/packagingSeCertificate":{"name":"packagingSeCertificate","parent_name":"SecureEnclaveSignatureProviderError"},"Enums/SecureEnclaveSignatureProviderError.html#/gatheringPairingData(_:)":{"name":"gatheringPairingData(_:)","parent_name":"SecureEnclaveSignatureProviderError"},"Enums/SecureEnclaveSignatureProviderError.html#/internal(_:_:)":{"name":"internal(_:_:)","parent_name":"SecureEnclaveSignatureProviderError"},"Enums/SecureEnclaveSignatureProviderError.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"SecureEnclaveSignatureProviderError"},"Enums/ConversionError.html#/generic(_:)":{"name":"generic(_:)","parent_name":"ConversionError"},"Enums/IDPError/InternalError.html#/loadDiscoveryDocumentUnexpectedNil":{"name":"loadDiscoveryDocumentUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/requestChallengeUnexpectedNil":{"name":"requestChallengeUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/constructingChallengeRequestUrl":{"name":"constructingChallengeRequestUrl","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/getAndValidateUnexpectedNil":{"name":"getAndValidateUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/constructingRefreshWithSSOTokenRequest":{"name":"constructingRefreshWithSSOTokenRequest","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/refreshResponseMissingHeaderValue":{"name":"refreshResponseMissingHeaderValue","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/challengeExpired":{"name":"challengeExpired","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/verifyUnexpectedNil":{"name":"verifyUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/verifyResponseMissingHeaderValue":{"name":"verifyResponseMissingHeaderValue","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/verifierCodeCreation":{"name":"verifierCodeCreation","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/stateNonceCreation":{"name":"stateNonceCreation","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/signedChallengeEncoded":{"name":"signedChallengeEncoded","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/signedChallengeEncryption":{"name":"signedChallengeEncryption","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/altVerifyResponseMissingHeaderValue":{"name":"altVerifyResponseMissingHeaderValue","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/encryptedSignedChallengeEncoding":{"name":"encryptedSignedChallengeEncoding","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/exchangeUnexpectedNil":{"name":"exchangeUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/exchangeTokenUnexpectedNil":{"name":"exchangeTokenUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/ssoLoginAndExchangeUnexpectedNil":{"name":"ssoLoginAndExchangeUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/registrationDataEncryption":{"name":"registrationDataEncryption","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/keyVerifierEncoding":{"name":"keyVerifierEncoding","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/encryptedKeyVerifierEncoding":{"name":"encryptedKeyVerifierEncoding","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/keyVerifierJweHeaderEncryption":{"name":"keyVerifierJweHeaderEncryption","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/keyVerifierJwePayloadEncryption":{"name":"keyVerifierJwePayloadEncryption","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/nestJwtInJwePayloadEncryption":{"name":"nestJwtInJwePayloadEncryption","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/invalidByteBuffer":{"name":"invalidByteBuffer","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/generatingSecureRandom(length:)":{"name":"generatingSecureRandom(length:)","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/registeredDeviceEncoding":{"name":"registeredDeviceEncoding","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/signedAuthenticationDataEncryption":{"name":"signedAuthenticationDataEncryption","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/constructingExtAuthRequestUrl":{"name":"constructingExtAuthRequestUrl","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/refreshTokenUnexpectedNil":{"name":"refreshTokenUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/loadDirectoryKKAppsUnexpectedNil":{"name":"loadDirectoryKKAppsUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/extAuthVerifyResponseMissingHeaderValue":{"name":"extAuthVerifyResponseMissingHeaderValue","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/extAuthVerifierCodeCreation":{"name":"extAuthVerifierCodeCreation","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/extAuthStateNonceCreation":{"name":"extAuthStateNonceCreation","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/extAuthVerifyAndExchangeUnexpectedNil":{"name":"extAuthVerifyAndExchangeUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/extAuthVerifyAndExchangeMissingQueryItem":{"name":"extAuthVerifyAndExchangeMissingQueryItem","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/extAuthConstructingRedirectUri":{"name":"extAuthConstructingRedirectUri","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/startExtAuthUnexpectedNil":{"name":"startExtAuthUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/extAuthVerifyUnexpectedNil":{"name":"extAuthVerifyUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/pairDeviceUnexpectedNil":{"name":"pairDeviceUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/unregisterDeviceUnexpectedNil":{"name":"unregisterDeviceUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/listDevicesUnexpectedNil":{"name":"listDevicesUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/altVerifyUnexpectedNil":{"name":"altVerifyUnexpectedNil","parent_name":"InternalError"},"Enums/IDPError/InternalError.html#/notImplemented":{"name":"notImplemented","parent_name":"InternalError"},"Enums/IDPError/ServerResponse.html#/description":{"name":"description","parent_name":"ServerResponse"},"Enums/IDPError.html#/network(error:)":{"name":"network(error:)","abstract":"<p>In case of HTTP/Connection error</p>","parent_name":"IDPError"},"Enums/IDPError.html#/validation(error:)":{"name":"validation(error:)","abstract":"<p>In case a response (or request) could not be (cryptographically) verified</p>","parent_name":"IDPError"},"Enums/IDPError.html#/tokenUnavailable":{"name":"tokenUnavailable","abstract":"<p>When a token is being requested, but none can be found</p>","parent_name":"IDPError"},"Enums/IDPError.html#/unspecified(error:)":{"name":"unspecified(error:)","abstract":"<p>Other error cases</p>","parent_name":"IDPError"},"Enums/IDPError.html#/decoding(error:)":{"name":"decoding(error:)","abstract":"<p>Message failed to decode/parse</p>","parent_name":"IDPError"},"Enums/IDPError.html#/noCertificateFound":{"name":"noCertificateFound","abstract":"<p>When failed to extract a X.509 certificate from the DiscoveryDocument</p>","parent_name":"IDPError"},"Enums/IDPError.html#/invalidDiscoveryDocument":{"name":"invalidDiscoveryDocument","abstract":"<p>When the discovery document has expired or the trust anchors could not be verified</p>","parent_name":"IDPError"},"Enums/IDPError.html#/invalidStateParameter":{"name":"invalidStateParameter","abstract":"<p>When the state parameter received from the server is not equal to the one sent</p>","parent_name":"IDPError"},"Enums/IDPError.html#/invalidNonce":{"name":"invalidNonce","abstract":"<p>When the nonce received from the server is not equal to the one sent</p>","parent_name":"IDPError"},"Enums/IDPError.html#/unsupported(_:)":{"name":"unsupported(_:)","abstract":"<p>When a method/algorithm is unsupported</p>","parent_name":"IDPError"},"Enums/IDPError.html#/encryption":{"name":"encryption","abstract":"<p>When encryption fails</p>","parent_name":"IDPError"},"Enums/IDPError.html#/decryption":{"name":"decryption","abstract":"<p>When decryption fails</p>","parent_name":"IDPError"},"Enums/IDPError.html#/internal(error:)":{"name":"internal(error:)","abstract":"<p>Internal error</p>","parent_name":"IDPError"},"Enums/IDPError.html#/trustStore(error:)":{"name":"trustStore(error:)","abstract":"<p>Issues related to Building or Verifying the trust store</p>","parent_name":"IDPError"},"Enums/IDPError.html#/pairing(_:)":{"name":"pairing(_:)","parent_name":"IDPError"},"Enums/IDPError.html#/invalidSignature(_:)":{"name":"invalidSignature(_:)","parent_name":"IDPError"},"Enums/IDPError.html#/serverError(_:)":{"name":"serverError(_:)","abstract":"<p>Server responded with an error</p>","parent_name":"IDPError"},"Enums/IDPError.html#/biometrics(_:)":{"name":"biometrics(_:)","abstract":"<p>Any biometrics related error</p>","parent_name":"IDPError"},"Enums/IDPError.html#/extAuthOriginalRequestMissing":{"name":"extAuthOriginalRequestMissing","abstract":"<p>External authentication failed due to missing or invalid original request</p>","parent_name":"IDPError"},"Enums/IDPError.html#/notAvailableInDemoMode":{"name":"notAvailableInDemoMode","abstract":"<p>Not implemented as the conforming instance is meant for demo purpose only</p>","parent_name":"IDPError"},"Enums/IDPError/ServerResponse.html":{"name":"ServerResponse","parent_name":"IDPError"},"Enums/IDPError/InternalError.html":{"name":"InternalError","parent_name":"IDPError"},"Enums/IDPError.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"IDPError"},"Enums/IDPCodeChallengeMode.html#/plain":{"name":"plain","parent_name":"IDPCodeChallengeMode"},"Enums/IDPCodeChallengeMode.html#/sha256":{"name":"sha256","parent_name":"IDPCodeChallengeMode"},"Enums/IDPCodeChallengeMode.html":{"name":"IDPCodeChallengeMode"},"Enums/IDPError.html":{"name":"IDPError","abstract":"<p>The specific error types for the IDP module</p>"},"Enums/ConversionError.html":{"name":"ConversionError"},"Enums/SecureEnclaveSignatureProviderError.html":{"name":"SecureEnclaveSignatureProviderError"},"Classes/IDPInterceptor.html#/delegate":{"name":"delegate","abstract":"<p>The IDPSession delegate used for the intercept</p>","parent_name":"IDPInterceptor"},"Classes/IDPInterceptor.html#/init(session:delegate:)":{"name":"init(session:delegate:)","abstract":"<p>Initialize with IDPSession</p>","parent_name":"IDPInterceptor"},"Classes/IDPInterceptor.html#/intercept(chain:)":{"name":"intercept(chain:)","abstract":"<p>Intercepting a <code>Chain</code> to set the Authorization header</p>","parent_name":"IDPInterceptor"},"Classes/DefaultSecureEnclaveSignatureProvider.html#/init(storage:keyIdentifierGenerator:privateKeyContainerProvider:)":{"name":"init(storage:keyIdentifierGenerator:privateKeyContainerProvider:)","parent_name":"DefaultSecureEnclaveSignatureProvider"},"Classes/DefaultSecureEnclaveSignatureProvider.html#/isBiometrieRegistered":{"name":"isBiometrieRegistered","parent_name":"DefaultSecureEnclaveSignatureProvider"},"Classes/DefaultSecureEnclaveSignatureProvider.html#/createPairingSession()":{"name":"createPairingSession()","parent_name":"DefaultSecureEnclaveSignatureProvider"},"Classes/DefaultSecureEnclaveSignatureProvider.html#/signPairingSession(_:with:certificate:)":{"name":"signPairingSession(_:with:certificate:)","parent_name":"DefaultSecureEnclaveSignatureProvider"},"Classes/DefaultSecureEnclaveSignatureProvider.html#/abort(pairingSession:)":{"name":"abort(pairingSession:)","parent_name":"DefaultSecureEnclaveSignatureProvider"},"Classes/DefaultSecureEnclaveSignatureProvider.html#/authenticationData(for:)":{"name":"authenticationData(for:)","parent_name":"DefaultSecureEnclaveSignatureProvider"},"Classes/DefaultIDPSession/Configuration.html#/init(clientId:redirectURI:extAuthRedirectURI:discoveryURL:scopes:)":{"name":"init(clientId:redirectURI:extAuthRedirectURI:discoveryURL:scopes:)","abstract":"<p>Initialize IDP Configuration</p>","parent_name":"Configuration"},"Classes/DefaultIDPSession.html#/init(config:storage:schedulers:httpClient:trustStoreSession:extAuthRequestStorage:)":{"name":"init(config:storage:schedulers:httpClient:trustStoreSession:extAuthRequestStorage:)","abstract":"<p>Initialize a DefaultIDPSession</p>","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/isLoggedIn":{"name":"isLoggedIn","abstract":"<p>Whether the session has access to a (valid) authenticated session (e.g. token)</p>","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/invalidateAccessToken()":{"name":"invalidateAccessToken()","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/autoRefreshedToken":{"name":"autoRefreshedToken","abstract":"<p>Subscribe to the session&rsquo;s IDPToken and receive the latest (session) token through this Publisher</p>","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/requestChallenge()":{"name":"requestChallenge()","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/verify(_:)":{"name":"verify(_:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/exchange(token:challengeSession:idTokenValidator:)":{"name":"exchange(token:challengeSession:idTokenValidator:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/refresh(token:)":{"name":"refresh(token:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/pairDevice(with:token:)":{"name":"pairDevice(with:token:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/unregisterDevice(_:token:)":{"name":"unregisterDevice(_:token:)","abstract":"<p>[REQ:gemSpec_IDP_Frontend:A_21416] Encryption</p>","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/listDevices(token:)":{"name":"listDevices(token:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/altVerify(_:)":{"name":"altVerify(_:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/loadDirectoryKKApps()":{"name":"loadDirectoryKKApps()","abstract":"<p>[REQ:gemSpec_IDP_Frontend:A_21431] Encryption</p>","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/startExtAuth(entry:)":{"name":"startExtAuth(entry:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession.html#/extAuthVerifyAndExchange(_:idTokenValidator:)":{"name":"extAuthVerifyAndExchange(_:idTokenValidator:)","parent_name":"DefaultIDPSession"},"Classes/DefaultIDPSession/Configuration.html":{"name":"Configuration","abstract":"<p>IDP Configuration</p>","parent_name":"DefaultIDPSession"},"Classes/BiometricsSHA256Signer/Error.html#/sessionClosed":{"name":"sessionClosed","parent_name":"Error"},"Classes/BiometricsSHA256Signer/Error.html#/signatureFailed":{"name":"signatureFailed","parent_name":"Error"},"Classes/BiometricsSHA256Signer.html#/init(privateKeyContainer:)":{"name":"init(privateKeyContainer:)","parent_name":"BiometricsSHA256Signer"},"Classes/BiometricsSHA256Signer/Error.html":{"name":"Error","parent_name":"BiometricsSHA256Signer"},"Classes/BiometricsSHA256Signer.html#/sign(message:)":{"name":"sign(message:)","parent_name":"BiometricsSHA256Signer"},"Classes/BiometricsSHA256Signer.html":{"name":"BiometricsSHA256Signer"},"Classes/DefaultIDPSession.html":{"name":"DefaultIDPSession","abstract":"<p>IDPSession acts as an interactor/mediator for the IDPClient and IDPStorage</p>"},"Classes/DefaultSecureEnclaveSignatureProvider.html":{"name":"DefaultSecureEnclaveSignatureProvider"},"Classes/IDPInterceptor.html":{"name":"IDPInterceptor","abstract":"<p>The IDP HTTP Interceptor to authenticate HTTP-Requests</p>"},"Classes.html#/PairingSession":{"name":"PairingSession","abstract":"<p>Represents a Biometrics PairingSession that may be reset when registration of a biometric key failed.</p>"},"readme.html":{"name":"Readme"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}