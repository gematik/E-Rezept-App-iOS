## Note: all of the config entries below are just examples with placeholders. Be sure to edit and adjust to your needs when uncommenting.

## Generate constants for your localized strings.
##   Be sure that SwiftGen only parses ONE locale (typically Base.lproj, or en.lproj, or whichever your development region is); otherwise it will generate the same keys multiple times.
##   SwiftGen will parse all `.strings` files found in that folder.
strings:
    - inputs: ./Resources/en-GB.lproj
      outputs:
        - templatePath: ../../Templates/strings.stencil
          output: ${DERIVED_SOURCES_DIR}/Strings+Generated.swift
## Generate constants for your Assets Catalogs, including constants for images, colors, ARKit resources, etc.
##   This example also shows how to provide additional parameters to your template to customize the output.
##   - Especially the `forceProvidesNamespaces: true` param forces to create sub-namespace for each folder/group used in your Asset Catalogs, even the ones without "Provides Namespace". Without this param, SwiftGen only generates sub-namespaces for folders/groups which have the "Provides Namespace" box checked in the Inspector pane.
##   - To know which params are supported for a template, use `swiftgen template doc xcassets swift5` to open the template documentation on GitHub.
xcassets:
    - inputs: ./Resources/Assets.xcassets
      outputs:
        - templatePath: ../../Templates/xcassets.stencil
          params:
            forceProvidesNamespaces: true
            bundle: Bundle.module
          output: ${DERIVED_SOURCES_DIR}/XCAssets+Generated.swift
    - inputs: ../../Tests/eRpAppTests/Resources/Assets.xcassets
      outputs:
        - templatePath: ../../Templates/xcassets.stencil
          params:
            forceProvidesNamespaces: true
          output: ../../Tests/eRpAppTests/Mocks/Generated/XCAssets+Generated.swift

## Generate Accessibility Identifiers from reference file
yaml:
    - inputs: ./Resources/AccessibilityIdentifier.yaml
      outputs:
        - templatePath: ../../Templates/accessibility.stencil
          params:
            enumName: "A11y"
          output: ${DERIVED_SOURCES_DIR}/Accessibility+Generated.swift
    - inputs: ./Resources/AnalyticsIdentifier.yaml
      outputs:
        - templatePath: ../../Templates/analytics.stencil
          params:
            enumName: "Analytics"
          output: ${DERIVED_SOURCES_DIR}/Analytics+Generated.swift
